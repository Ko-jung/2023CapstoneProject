로컬 퍼셉션 필터(local perception filter): 클라이언트 측 보간, 서버에서 온 정보를 즉시 적용하는것이 아닌 보간하여 서서히 맞추게하는 알고리즘.
	이때 보간 주기는 패킷 주기보다 항상 커야한다. 그렇지 않으면 뚝뚝 끊기는 것처럼 보인다.

외삽법(extrapolation): 클라이언트 측 예측, 조금 오래된 상태를 서버에서 받아 현재 상태와 가능한 가깝게 맞춘 뒤 플레이어에게 보여주는 것.
	RTT를 이용하기 때문에 RTT를 구해야한다.

데드 레커닝(dead reckoning): 대상체가 현재 하는 행동을 지속할 것이란 가정하에 대상체의 다음 행동을 예측하는 기법
	하지만 플레이어인 경우 예측하기 힘들기 때문에 예측이 틀린 결과로 인해 수정이 필요할 때가 있다.
수습 세 가지론 
1. 즉시 상태 갱신: 그냥 새 상태를 즉시 반영해버린다. 하지만 여전히 1/2RTT가 있으므로 데드 레커닝을 1/2RTT만큼 시뮬해야한다.
2. 보간: 보간법을 이용하여 잘못 예측한 상태에서 출발해 몇 프레임에 걸쳐 새 상태로 보간해 나간다.
	많이 쓰이는 방법으론 삼차 스플라인 보간을 이용하는데, 시작 지점(틀린지점)에서 끝 지점(갱신받은 위치와 속력으로 1/2RTT 만큼 더 진행한)을 잇는 곡선을 만들어 부드럽게 따라가는것
3. 상태 변수의 도함수를 유도하여 적용: 멈춰있던 객체가 속도를 내는경우 보간하더라도 거슬리게 보일 수 있다. 속력에 대해 도함수를 유도하여 가속도를 구하여
	시뮬레이션을 섬세하게 제어하는 방식이다. 수학적으로 복잡하지만 가장 자연스러운 수정방법이다.

8.3.2 클라이언트 이동 예측 및 이동 조작 되새김: 클라A 위치가 서버와 다를때 보간을하던 텔레포트를하던 플레이어A는 이상함을 느낄 수밖에없음.
	이에 관한건 이 문제가 생기면 다시 보자.

서버 측 되감기: 사격같이 정밀한 계산이 필요한 경우 서버 상태를 플레이어가 조준하고 발사한 그 시점으로 되돌려놓고 판정하는 방법
	그러면 클라에 다음과 같은 수정이 필요하다 (8.4)
		1. 원격 플레이어에 대해서 데드 레커닝을 하지 않고 클라이언트 측 보간만 수행
		2. 클라이언트 이동 예측과 이동 조작 되새김 사용
		3. 클라이언트의 시점을 매 이동 조작 패킷에 실어서 서버에 전송
		4. 사격 판정과 관련있는 객체의 위치 및 자세 등 최근 몇 프레임 분량의 정보를 서버에 유지

