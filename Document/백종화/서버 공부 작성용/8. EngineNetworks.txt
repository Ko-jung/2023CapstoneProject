언리얼엔진
	- 액터 리플리케이션: 언리얼은 CS 모델만 지원하므로 서버가 클라이언트에 업데이트를 전송할 방법이 필요하다.
		한 클라이언트에 연관된 액터가 무엇인지를 판단해 스코프 혹은 연관성을 결정한다.
		더불어 어떤 액터가 특정 클라이언트의 스코프에만 포함되는 것이라면 서버 대신 클라에만 액터를 스폰할 수 있다.
		(이펙트같은것들을 클라에서만 스폰하여 서버는 모르게)
		이런 연관성은 그 다음으로 중요한 롤과 연계된다.
		롤은 
			오소리티: 질의한 인스턴스가 액터의 결정권자이다.
			시뮬레이티드 프록시: 클라가 액터의 어떤 특성을 시뮬하고 있다는 의미.
			자율 프록시: 시뮬 프록시와 비슷하지만 게임 인스턴스로부터 직접 입력 이벤트를 받는 프록시가 추가된다.
		로 나뉜다.
		파티클같이 클라에서만 스폰되는 액터는 클라가 오쏘리티를 가져간다.
		서버가 오쏘리티를 가진 모든 액터들은 전 클라이언트에 리플리케이션되며 클라이언트의 스코프에 있을때만이다.
		언리얼의 액터 리플리케이션은 항상 서버에서 클라이언트 방향으로만 이루어지며, 클라가 액터를 만들어 서버에 리플리 또는 다른 클라에 리플리할 수 있는 방법은 없다.
	- 원격 프로시저 호출: 언리얼에선 서버, 클라이언트, 멀티캐스트 세 가지의 형식이 있다.
		서버 함수: 클라가 호출하여 서버가 실행하는 것. 하지만 액터의 소유자로 확인되는 클라이언트만 그 액터에 한해 서버상 RPC를 요청할 수 있다. 치트방지
		클라이언트 함수: 서버 함수의 반대. 서버가 클라에 있는 함수를 호출하면 호출 내역이 그 액터의 소유자인 클라에게 전달.
		멀티캐스트 함수: 여러 게임 인스턴스를 동시에 호출. 특정 사건이 발생하였음을 전 클라에게 알리고 싶을때 사용.

유니티
	(패스)

